--[[=============================================================================== ** Enemy v1.0 **  By Lysferd (C) 2014===============================================================================--]]require( 'lua.battlesprite' )require( 'lua.meter' )----------------------------------------------------------------------- * Frame update.---------------------------------------------------------------------Enemy = { }Enemy.__index = Enemyfunction Enemy.new( x, y )  local obj = setmetatable( { }, Enemy )    -- fixme: make this a battler  obj.source = love.graphics.newImage( 'graphics/goddess.png' )  obj.x = x  obj.y = y  obj.w = obj.source:getWidth()  obj.h = obj.source:getHeight()  -- end fixme    obj.movable = false  obj.locked_on = false    obj.font        = FONT  obj.name_canvas = love.graphics.newCanvas()  obj.hp_bar      = Meter.new( obj.x, obj.y - obj.h / 2 + 12, Color.red )    -- fixme: the following parameters have to be read from external sources  obj.name       = 'Pretty Goddess'  obj.max_hp     = 100.0  obj.hp         = obj.max_hp  obj.max_mp     = 100.0  obj.mp         = obj.max_mp  obj.attack     = 25.0  obj.defense    = 20.0  obj.magic      = 34.0  obj.resistance = 36.0  obj.speed      = 13.0  -- end fixme    Enemy.refresh( obj )    return objend----------------------------------------------------------------------- * Frame update.---------------------------------------------------------------------function Enemy:update()  if self.locked_on then self.x, self.y = love.mouse.getPosition() end    self.hp_bar:update( self.hp / self.max_hp )end----------------------------------------------------------------------- * Frame update.---------------------------------------------------------------------function Enemy:draw()  local original_color = { love.graphics.getColor() }    love.graphics.draw( self.source, self.x, self.y, 0, 1, 1, self.w / 2, self.h / 2 )  love.graphics.setBlendMode('premultiplied')  love.graphics.draw( self.name_canvas )  love.graphics.setBlendMode('alpha')  self.hp_bar:draw()    love.graphics.setColor( original_color )end----------------------------------------------------------------------- * Frame update.---------------------------------------------------------------------function Enemy:refresh()  love.graphics.setCanvas( self.name_canvas )  self.name_canvas:clear()  love.graphics.print_outline( self.name, self.x, self.y - self.h / 2, 0, 1, 1, self.font:getWidth( self.name ) / 2 )  love.graphics.setCanvas()end----------------------------------------------------------------------- * Frame update.---------------------------------------------------------------------function Enemy:mousepressed( x, y, key )  if within_area( x, y, self.x, self.y, self.w, self.h ) and self.movable then    self.locked_on = not self.locked_on  endend